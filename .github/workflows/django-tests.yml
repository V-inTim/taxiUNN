name: Django Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: my_database_name
          POSTGRES_USER: my_database_user
          POSTGRES_PASSWORD: my_database_password
          
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt


    - name: Run migrations
      env:
        DB_NAME: my_database_name
        DB_USER: my_database_user
        DB_PASSWORD: my_database_password
        DB_HOST: localhost
        REDIS_HOST: localhost
        REDIS_PASSWORD:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      run: |
        cd taxiunn/
        python manage.py migrate

    - name: Run tests
      env:
        DB_NAME: my_database_name
        DB_USER: my_database_user
        DB_PASSWORD: my_database_password
        DB_HOST: localhost
        REDIS_HOST: localhost
        REDIS_PASSWORD:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      run: |
        cd taxiunn/
        python manage.py test